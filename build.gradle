plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}


bootJar.enabled = false // 현재 모듈의 jar 파일을 생성하지 않음
jar.enabled = true // 현재 모듈의 jar 파일을 생성

subprojects {
    group = 'ex'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }


    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    if (project.path.startsWith(':application:')) {
        ext {
            set('springCloudVersion', "2023.0.3")
        }

        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }

        }
    }


    dependencies { // 모든 하위 모듈에 이 설정을 적용
        // spring
        //implementation 'org.springframework.boot:spring-boot-starter'

        if (project.name != 'gateway') {
            // spring web mvc
            implementation 'org.springframework.boot:spring-boot-starter'
            implementation 'org.springframework.boot:spring-boot-starter-web'

        }

        /* if (project.name != 'gateway') {
             // spring web mvc
             implementation 'org.springframework.boot:spring-boot-starter-web'
         }*/


        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // mapStruct
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        /* Test */

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        /* module */

        if (project.name != 'common') {
            implementation project(':common:common')
        }

        // 특정 application 모듈에만 적용할 종속성
        if (project.path.startsWith(':application:')) {
            if (project.name == 'eureka') {
                //eureka server
                implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
            } else {
                //eureka client
                implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
            }
            //openFeign
            implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
